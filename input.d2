comment: |md
## Big Bang Deployment Flow
* Customer Deployment Repo 
  - Link: [https://repo1.dso.mil/platform-one/big-bang/customers/template](https://repo1.dso.mil/platform-one/big-bang/customers/template)
  - Built from the template
  - Supports defining multiple environments (ex: prod and dev)
  - Upon deploying, a Flux GitRepository **[1]** is created to keep synchronization between the cluster and git
  - Also on deploying, a Flux Kustomization **[1]** is created that references the Big Bang Helm Chart Repo
    * Link: [https://repo1.dso.mil/platform-one/big-bang/bigbang](https://repo1.dso.mil/platform-one/big-bang/bigbang)
    * Big Bang Helm Release (umbrella chart of Flux references to components defined in other charts)
      - The Flux Kustomization points to the Big Bang Git Repo **[2]** which contains a Helm Release **[3]** with definitions for Flux Custom Resources (CRs)
        * Flux GitRepository CRs **[4]**
          - References git repositories **[5]** containing each component (ex: HAProxy)
          - Pulls down a copy of the git repositories into the K8s cluster
        * Flux HelmRelease CRs **[6]**
          - Utilizes the code in the GitRepository CRs **[7]** to creates Flux HelmChart CRs **[8]**
          - Renders the Helm Charts and deploys them as Kubernetes "Helm Releases" **[9]**
            * Helm Releases of each Big Bang Component
              - Applies the Kubernetes resources contained in the rendered Helm Release **[10]**
                * ConfigMaps
                * Services
                * Starts up Kubernetes Pods as part of the spec (ReplicaSet, DaemonSet, StatefulSet, Deployment)
                  - Pods will pulls the container images **[11]** required from the container registry
                  - Now the Big Bang workloads are finally running!

                    >  ********
                    >
                    > **_NOTE:_** The digram represents the sequence of events (not ownership), and only the HAProxy and Logging Big Bang components are depicted in this diagram for brevity
                    > 
                    >  ********

                    [comment]: <> (The comment and extra space is here because otherwise it cuts off early)
  
|
# Kubernetes Cluster Components
k8s: {
  label: K8s Cluster
  style: {
    fill: '#acd7e1'
    stroke-width: 5
    font-size: 20
  }
  flux: {
    label: Flux Components
    style: {
      fill: '#e1d7ac'
      font-size: 20
    }
    ks-cr: {
      label: Kustomization CRs
      style: {
        fill: '#ace1ac'
        font-size: 20
      }
      bb-ks-cr: {
        label: Big Bang Kustomization CR
        shape: image
        icon: ./images/flux-kustomization-logo.svg
        width: 200
        height: 200
        font-size: 10 
      }
    }
    hr-cr: {
      label: HelmRelease CRs
      style: {
        fill: '#ace1ac'
        font-size: 20
      }
      haproxy-hr-cr: {
        label: HAProxy HelmRelease CR
        shape: image
        icon: ./images/flux-helmrelease-logo.svg
        width: 200
        height: 200
        font-size: 10 
      }
      logging-hr-cr: {
        label: Logging HelmRelease CR
        shape: image
        icon: ./images/flux-helmrelease-logo.svg
        width: 200
        height: 200
        font-size: 10 
      }
    }
    hc-cr: {
      label: HelmChart CRs
      style: {
        fill: '#ace1ac'
        font-size: 20
      }
      haproxy-hc-cr: {
        label: HAProxy HelmChart CR
        shape: image
        icon: ./images/flux-helmchart-logo.svg
        width: 200
        height: 200
        font-size: 10 
      }
      logging-hc-cr: {
        label: Logging HelmChart CR
        shape: image
        icon: ./images/flux-helmchart-logo.svg
        width: 200
        height: 200
        font-size: 10 
      }
    }
    gr-cr: {
      label: GitRepository CRs
      style: {
        fill: '#ace1ac'
        font-size: 20
      }
      cust-bb-gr-cr: {
        label: Customer BigBang GitRepository CR
        shape: image
        icon: ./images/flux-gitrepo-logo.svg
        width: 200
        height: 200
        font-size: 10 
      }
      haproxy-gr-cr: {
        label: HAProxy GitRepository CR
        shape: image
        icon: ./images/flux-gitrepo-logo.svg
        width: 200
        height: 200
        font-size: 10 
      }
      logging-gr-cr: {
        label: Logging GitRepository CR
        shape: image
        icon: ./images/flux-gitrepo-logo.svg
        width: 200
        height: 200
        font-size: 10 
      }
    }
  }
  helm: {
    label: Helm Releases
    style: {
      fill: '#e1d7ac'
      font-size: 20
    }
    bb-hr: {
      label: Big Bang Helm Release
      shape: image
      icon: ./images/helm-release-logo.svg
      width: 200
      height: 200
      font-size: 10 
    }
    logging-hr: {
      label: Logging Helm Release
      shape: image
      icon: ./images/helm-release-logo.svg
      width: 200
      height: 200
      font-size: 10 
    }
    haproxy-hr: {
      label: HAProxy Helm Release
      shape: image
      icon: ./images/helm-release-logo.svg
      width: 200
      height: 200
      font-size: 10 
    }
  }
  ns: {
    label: Namespaces
    style: {
      fill: '#e1d7ac'
      font-size: 20
    }
    logging-ns: {
      label: Logging Namespace
      style: {
        fill: '#ace1ac'
        font-size: 20
      }
      logging-pods: {
        label: Logging Pods
        shape: image
        icon: ./images/pod.svg
        font-size: 10 
      }
      logging-svcs: {
        label: Logging Services
        shape: image
        icon: ./images/svc.svg
        font-size: 10
      }
      logging-cms: {
        label: Logging Configmaps
        shape: image
        icon: ./images/cm.svg
        font-size: 10
      }
    }
    haproxy-ns: {
      label: HAProxy Namespace
      style: {
        fill: '#ace1ac'
        font-size: 20
      }
      haproxy-pods: {
        label: HAProxy Pods
        shape: image
        icon: ./images/pod.svg
        font-size: 10
      }
      haproxy-svcs: { 
        label: HAProxy Services
        shape: image
        icon: ./images/svc.svg
        font-size: 10
      }
      haproxy-cms: {
        label: HAProxy Configmaps
        shape: image
        icon: ./images/cm.svg
        font-size: 10
      }
    }
  }
}

# Git Repository Components (repo1)
gitrepo: {
  label: Git Code Repository
  style: {
    fill: '#acd7e1'
    stroke-width: 5
    font-size: 20
  }
  cust-repo: {
    label: "Customer Chart Repo"
    shape: image
    icon: ./images/git-original.svg
    width: 200
    height: 200
    font-size: 10
  } 
  bb-repo: {
    label: "Big Bang Umbrella Chart Repo"
    shape: image
    icon: ./images/git-original.svg
    width: 200
    height: 200
    font-size: 10
  } 
  logging-repo: {
    label: "Logging Chart Repo"
    shape: image
    icon: ./images/git-original.svg
    width: 200
    height: 200
    font-size: 10
  } 
  haproxy-repo: {
    label: "HAProxy Chart Repo"
    shape: image
    icon: ./images/git-original.svg
    width: 200
    height: 200
    font-size: 10
  } 
}

# Container Registry Components (registry11)
registry: {
  label: Container Registry
  style: {
    fill: '#acd7e1'
    stroke-width: 5
    font-size: 20
  }
  haproxy-image: {
    label: haproxy/haproxy22:v2.2.21
    shape: image
    icon: ./images/container-logo.svg
    width: 200
    height: 200
    font-size: 10
  }
  elastic-image: {
    label: elastic/elasticsearch/elasticsearch:8.5.0
    shape: image
    icon: ./images/container-logo.svg
    width: 200
    height: 200
    font-size: 10
  }
  kibana-image: {
    label: elastic/kibana/kibana:8.5.0 
    shape: image
    icon: ./images/container-logo.svg
    width: 200
    height: 200
    font-size: 10
  }
  loki-image: {
    label: grafana/loki:2.6.1 
    shape: image
    icon: ./images/container-logo.svg
    width: 200
    height: 200
    font-size: 10
  }
}


# Arrows describing relationships
gitrepo.cust-repo -> k8s.flux.ks-cr.bb-ks-cr: '[1] deploys a ks cr'
gitrepo.cust-repo <-> k8s.flux.gr-cr.cust-bb-gr-cr: '[1] deploys a gitrepo cr that continues syncing with flux'
k8s.flux.ks-cr.bb-ks-cr -> gitrepo.bb-repo: '[2] ref to big bang repo'
gitrepo.bb-repo -> k8s.helm.bb-hr: '[3] git repo defines a big bang helm release'
k8s.helm.bb-hr -> k8s.flux.gr-cr.haproxy-gr-cr: '[4]' #creates flux haproxy gitrepo cr
k8s.helm.bb-hr -> k8s.flux.gr-cr.logging-gr-cr: '[4]' #creates flux logging gitrepo cr
k8s.flux.gr-cr.haproxy-gr-cr <-> gitrepo.haproxy-repo: '[5] pulls haproxy git repo'
k8s.flux.gr-cr.logging-gr-cr <-> gitrepo.logging-repo: '[5] pulls logging git repo'
k8s.helm.bb-hr -> k8s.flux.hr-cr.haproxy-hr-cr: '[6]' #creates flux haproxy hr cr
k8s.helm.bb-hr -> k8s.flux.hr-cr.logging-hr-cr: '[6]' #creates flux logging hr cr
k8s.flux.hr-cr.haproxy-hr-cr <-> k8s.flux.gr-cr.haproxy-gr-cr: '[7]' #pulls flux haproxy gitrepo
k8s.flux.hr-cr.logging-hr-cr <-> k8s.flux.gr-cr.logging-gr-cr: '[7]' #pulls flux logging gitrepo
k8s.flux.hr-cr.haproxy-hr-cr -> k8s.flux.hc-cr.haproxy-hc-cr: '[8] creates flux haproxy hc'
k8s.flux.hr-cr.logging-hr-cr -> k8s.flux.hc-cr.logging-hc-cr: '[8] creates flux logging hc'
k8s.flux.hr-cr.haproxy-hr-cr -> k8s.helm.haproxy-hr: '[9]' #creates haproxy helm release
k8s.flux.hr-cr.logging-hr-cr -> k8s.helm.logging-hr: '[9]' #creates logging helm release
k8s.helm.haproxy-hr -> k8s.ns.haproxy-ns.haproxy-pods: '[10] creates haproxy pods'
k8s.helm.haproxy-hr -> k8s.ns.haproxy-ns.haproxy-svcs: '[10] creates haproxy services'
k8s.helm.haproxy-hr -> k8s.ns.haproxy-ns.haproxy-cms: '[10] creates haproxy configmaps'
k8s.helm.logging-hr -> k8s.ns.logging-ns.logging-pods: '[10] creates logging pods'
k8s.helm.logging-hr -> k8s.ns.logging-ns.logging-svcs: '[10] creates loggging services'
k8s.helm.logging-hr -> k8s.ns.logging-ns.logging-cms: '[10] creates logging configmaps'
k8s.ns.haproxy-ns.haproxy-pods -> registry.haproxy-image: '[11] pulls haproxy image'
k8s.ns.logging-ns.logging-pods -> registry.elastic-image: '[11] pulls elastic image'
k8s.ns.logging-ns.logging-pods -> registry.kibana-image: '[11] pulls kibana image'
k8s.ns.logging-ns.logging-pods -> registry.loki-image: '[11] pulls loki image'
